class Solution{
private:
    int solve(int i,int j,vector<vector<int>> mat,int &maxi,vector<vector<int>> &dp){
        if(i>=mat.size() || j>=mat[0].size()){
            return 0;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        
        int right=solve(i,j+1,mat,maxi,dp);
        int diagonal=solve(i+1,j+1,mat,maxi,dp);
        int down=solve(i+1,j,mat,maxi,dp);
        
        
        if(mat[i][j]==1){
            dp[i][j]=1+min(right,min(diagonal,down));
            maxi=max(dp[i][j],maxi);
            return dp[i][j];
            
        }else{
            return dp[i][j]=0;
        }
    }
public:
    int maxSquare(int n, int m, vector<vector<int>> mat){
        vector<vector<int>> dp(n,vector<int>(m,-1));
        int maxi=0;
        solve(0,0,mat,maxi,dp);
        return maxi;
    }
};
